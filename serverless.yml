service: ms-${self:custom.serviceName}
useDotenv: true
provider:
  name: aws
  runtime: nodejs14.x
  timeout: 30
  memorySize: 512
  versionFunctions: false
  stage: ${opt:stage, "${env:stage, 'local'}"}
  region: ${opt:region, "${env:region, 'us-east-1'}"}
  lambdaHashingVersion: '20210326'
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - s3:*
          Resource: 'arn:aws:s3:::*/*'
  environment:
    STAGE: ${self:provider.stage}
    DB_HOST: ${env:DB_HOST, ssm:/ifsp/infra/aurora/host}
    DB_PORT: ${env:DB_PORT, ssm:/ifsp/infra/aurora/port}
    DB_NAME: ${env:DB_NAME, ssm:/ifsp/infra/aurora/dbname}
    DB_USER: ${env:DB_USER, ssm:/ifsp/infra/aurora/username}
    DB_PASSWORD: ${env:DB_PASSWORD, ssm:/ifsp/infra/aurora/password}
plugins:
  - serverless-webpack
  - serverless-offline
  - serverless-prune-plugin
custom:
  prune:
    automatic: true
    includeLayers: true
    number: 3
  serviceName: schedule
  contextPath: /v1/${self:custom.serviceName}
  funcDir: src/framework/functions
  baseApi: ${self:custom.contextPath}
  baseApiPrivate: internal/${self:custom.contextPath}
  serverless-offline:
    httpPort: 4005
    lambdaPort: 3005
    stage: local
  webpack:
    webpackConfig: 'webpack.config.js'
    packager: 'yarn'
    packagerOptions:
      noFrozenLockfile: true
    includeModules:
      forceInclude:
        - pg
        - pg-hstore
      forceExclude:
        - aws-sdk
functions:
  - ${file(${self:custom.funcDir}/users/users.yml)}
  - ${file(${self:custom.funcDir}/userContacts/userContacts.yml)}
  - ${file(${self:custom.funcDir}/events/events.yml)}
  - ${file(${self:custom.funcDir}/contacts/contacts.yml)}
  - ${file(${self:custom.funcDir}/eventContacts/eventContacts.yml)}
